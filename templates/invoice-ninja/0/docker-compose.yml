version: '2'
services:
  app:
    image: invoiceninja/invoiceninja
    depends_on:
      - db
    labels:
      io.rancher.scheduler.affinity:host_label: ${HOST_LABEL_KEY}=${HOST_LABEL_VALUE}
      io.rancher.sidekicks: cron, web
    networks:
      - ninja-net
    restart: on-failure
    volumes:
      - ${VOLUME_LOGO}:/var/www/app/public/logo:nocopy
      - ${VOLUME_STORAGE}:/var/www/app/storage:nocopy
  cron:
    image: invoiceninja/invoiceninja
    entrypoint: |
      bash -c 'bash -s <<EOF
      trap "break;exit" SIGHUP SIGINT SIGTERM
      sleep 300s
      while /bin/true; do
        ./artisan ninja:send-invoices
        ./artisan ninja:send-reminders
        sleep 1h
      done
      EOF'
    labels:
      io.rancher.scheduler.affinity:host_label: ${HOST_LABEL_KEY}=${HOST_LABEL_VALUE}
    networks:
      - ninja-net
    restart: on-failure
    volumes_from:
      - app
  db:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=test123456
      - MYSQL_DATABASE=ninja
    labels:
      io.rancher.scheduler.affinity:host_label: ${HOST_LABEL_KEY}=${HOST_LABEL_VALUE}
    restart: on-failure
    volumes:
      - ${VOLUME_DB}:/var/lib/mysql:nocopy
  web:
    image: nginx
    depends_on:
      - app
    labels:
      io.rancher.scheduler.affinity:host_label: ${HOST_LABEL_KEY}=${HOST_LABEL_VALUE}
    networks:
      - ninja-net
    ports:
      - "8000:8000"
    restart: on-failure
    volumes:
      - ${VOLUME_WEB}:/etc/nginx:nocopy
    volumes_from:
      - app
environment:
  - APP_DEBUG=0
  - APP_ENV='production'
  - APP_URL=${APP_URL}
  - APP_KEY=${APP_KEY}
  - APP_CIPHER='AES-256-CBC'
  - DB_HOST='db'
  - DB_STRICT='false'
  - DB_TYPE='mysql'
  - DB_USERNAME='root'
  - DB_PASSWORD='test123456'
networks:
  ninja-net:
volumes_driver: rancher-nfs