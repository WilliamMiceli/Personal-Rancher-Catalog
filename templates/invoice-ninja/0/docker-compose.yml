version: '2'
services:
  app:
    image: invoiceninja/invoiceninja
    depends_on:
      - db
    environment:
      - APP_DEBUG=0
      - APP_ENV='production'
      - APP_KEY=${APP_KEY}
      - APP_CIPHER='AES-256-CBC'
      - DB_HOST='db'
      - DB_STRICT='false'
      - DB_TYPE='mysql'
      - DB_USERNAME='ninja'
      - DB_PASSWORD='ninja'
    labels:
      io.rancher.scheduler.affinity:host_label: ${LABEL_KEY_VALUE}
      io.rancher.sidekicks: cron, web
    networks:
      - ninja-net
    restart: on-failure
    volumes:
      - ${STORAGE_BASE_DIR}${LOGO_DIR}:/var/www/app/public/logo
      - ${STORAGE_BASE_DIR}${STORAGE_DIR}:/var/www/app/storage
  cron:
    image: invoiceninja/invoiceninja
    entrypoint: |
      bash -c 'bash -s <<EOF
      trap "break;exit" SIGHUP SIGINT SIGTERM
      sleep 300s
      while /bin/true; do
        ./artisan ninja:send-invoices
        ./artisan ninja:send-reminders
        sleep 1h
      done
      EOF'
    environment:
      - APP_DEBUG=0
      - APP_ENV='production'
      - APP_KEY=${APP_KEY}
      - APP_CIPHER='AES-256-CBC'
      - DB_HOST='db'
      - DB_STRICT='false'
      - DB_TYPE='mysql'
      - DB_USERNAME='ninja'
      - DB_PASSWORD='ninja'
    labels:
      io.rancher.scheduler.affinity:host_label: ${LABEL_KEY_VALUE}
    networks:
      - ninja-net
    restart: on-failure
    volumes_from:
      - app
  db:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD='ninja'
      - MYSQL_DATABASE='ninja'
    labels:
      io.rancher.scheduler.affinity:host_label: ${LABEL_KEY_VALUE}
    restart: on-failure
    volumes:
      - ${STORAGE_BASE_DIR}${DB_DIR}:/var/lib/mysql
  web:
    image: nginx
    depends_on:
      - app
    labels:
      io.rancher.scheduler.affinity:host_label: ${LABEL_KEY_VALUE}
    networks:
      - ninja-net
    ports:
      - "${WEB_PORT}:80"
    restart: on-failure
    volumes:
      - ${STORAGE_BASE_DIR}${CONFIG_DIR}/nginx.conf:/etc/nginx/nginx.conf:ro
    volumes_from:
      - app
networks:
  ninja-net: