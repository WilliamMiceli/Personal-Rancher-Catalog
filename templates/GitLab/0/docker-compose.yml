version: '2'

services:
  gitlab:
    image: gitlab/gitlab-ce:latest
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://${TRAEFIK_HOST}'
        gitlab_rails['gitlab_shell_ssh_port'] = 22
        nginx['real_ip_trusted_addresses'] = [ '10.42.0.0/16' ] # 10.42.0.0/16 is the default Rancher-managed subnet
        nginx['listen_port'] = 80 # Using HTTP between the Traefik container and GitLab
        nginx['listen_https'] = false # Traefik is handling HTTPS termination
    hostname: ${TRAEFIK_HOST}
    labels:
      io.rancher.container.pull_image: always
      {{- if .Values.HOST_LABEL}}
      io.rancher.scheduler.affinity:host_label: ${HOST_LABEL}
      {{- end}}
      ### Begin Traefik Configuration
      traefik.enable: true
      # Routers
      traefik.http.routers.{{.Stack.Name}}-router-http.entrypoints: http
      traefik.http.routers.{{.Stack.Name}}-router-http.rule: Host(`${TRAEFIK_HOST}`)
      traefik.http.routers.{{.Stack.Name}}-router-http.middlewares: {{.Stack.Name}}-redirectHttp
      traefik.http.routers.{{.Stack.Name}}-router-http.service: {{.Stack.Name}}-service-http
      traefik.http.routers.{{.Stack.Name}}-router-https.entrypoints: https
      traefik.http.routers.{{.Stack.Name}}-router-https.rule: Host(`${TRAEFIK_HOST}`)
      traefik.http.routers.{{.Stack.Name}}-router-https.tls: true
      traefik.http.routers.{{.Stack.Name}}-router-https.tls.certresolver: letsencrypt
      traefik.http.routers.{{.Stack.Name}}-router-https.middlewares: {{.Stack.Name}}-security
      traefik.http.routers.{{.Stack.Name}}-router-https.service: {{.Stack.Name}}-service-http
      traefik.tcp.routers.{{.Stack.Name}}-router-ssh.entrypoints: ssh
      traefik.tcp.routers.{{.Stack.Name}}-router-ssh.rule: HostSNI(`${TRAEFIK_HOST}`)
      traefik.tcp.routers.{{.Stack.Name}}-router-ssh.tls: true
      traefik.tcp.routers.{{.Stack.Name}}-router-ssh.tls.certresolver: letsencrypt
      traefik.tcp.routers.{{.Stack.Name}}-router-ssh.tls.passthrough: true
      traefik.tcp.routers.{{.Stack.Name}}-router-ssh.service: {{.Stack.Name}}-service-ssh
      # Middlewares
      traefik.http.middlewares.{{.Stack.Name}}-redirectHttp.redirectscheme.permanent: true
      traefik.http.middlewares.{{.Stack.Name}}-redirectHttp.redirectscheme.scheme: https
      traefik.http.middlewares.{{.Stack.Name}}-security.headers.forceSTSHeader: true
      traefik.http.middlewares.{{.Stack.Name}}-security.headers.referrerPolicy: no-referrer # Prevents leaking of referer information
      traefik.http.middlewares.{{.Stack.Name}}-security.headers.sslredirect: true # Maybe good for redundancy?
      traefik.http.middlewares.{{.Stack.Name}}-security.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.{{.Stack.Name}}-security.headers.stsPreload: true
      traefik.http.middlewares.{{.Stack.Name}}-security.headers.stsSeconds: "15552000"
      # Services
      traefik.http.services.{{.Stack.Name}}-service-http.loadbalancer.passhostheader: true
      traefik.http.services.{{.Stack.Name}}-service-http.loadbalancer.server.port: "80"
      traefik.tcp.services.{{.Stack.Name}}-service-ssh.loadbalancer.server.port: "22"
      ### End Traefik Configuration
    restart: on-failure
    volumes:
      - /etc/localtime:/etc/localtime:ro # Syncronize time of container with the host system
      - /etc/timezone:/etc/timezone:ro # Syncronize timezone of container with the host system
      - /Persistent/${DATA_DIR}/Config:/etc/gitlab
      - /Persistent/${DATA_DIR}/Logs:/var/log/gitlab
      - /Persistent/${DATA_DIR}/Data:/var/opt/gitlab